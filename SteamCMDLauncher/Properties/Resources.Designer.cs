//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamCMDLauncher.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SteamCMDLauncher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] dedicated_server_list {
            get {
                object obj = ResourceManager.GetObject("dedicated_server_list", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Game Settings for CSGO (740 - Parent 730)
        ///{
        ///  // Key: Tab, Value: Children/Options
        ///  // Hashtag: For translations (Hint to find the correct string for the current language)
        ///
        ///  &quot;#General&quot;: {
        ///    &quot;#Server_Name&quot;: {
        ///      &quot;text&quot;: &quot;#Server_Name&quot;,
        ///      &quot;type&quot;: &quot;input&quot;,
        ///      &quot;can_leave_blank&quot;: true,
        ///      &quot;default&quot;: &quot;Counter-Strike: Global Offsensive&quot;
        ///    },
        ///    &quot;#Server_Tick&quot;: {
        ///      &quot;text&quot;: &quot;#Is_128_Tick&quot;,
        ///      &quot;type&quot;: &quot;check&quot;,
        ///      &quot;default&quot;: false,
        ///      &quot;hint&quot;:  &quot;#Is_128_Tick_Hint&quot;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string game_setting_740 {
            get {
                return ResourceManager.GetString("game_setting_740", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string game_setting_740_en {
            get {
                return ResourceManager.GetString("game_setting_740_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	// Look at: https://steamdb.info/depot/X/
        ///	// Replace &apos;X&apos; with depot id (usually offset by 1 on wards -&gt; 4021 (4020 + 1)
        ///
        ///	// [NOTE] Currently all Windows depots - None for Linux or Mac OS yet
        ///
        ///	// Garrys Mod
        ///	&quot;4020&quot;: [ &quot;/garrysmod&quot; ],
        ///
        ///	// CSGO
        ///	&quot;740&quot;: [ &quot;/csgo&quot; ],
        ///
        ///	// CS 1.6 / Half Life
        ///	&quot;90&quot;: [ &quot;/cstrike&quot; ],
        ///
        ///	// 7 Days to Die
        ///	&quot;294420&quot;: [ &quot;.7DaysToDieServer.exe&quot;, &quot;/7DaysToDieServer_Data&quot; ],
        ///
        ///	// ASTRONEER
        ///	&quot;728470&quot;: [ &quot;/Astro&quot; ],
        ///
        ///	// Age of Chivalry
        ///	&quot;17515&quot;: [ &quot;/ageofchivalry [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string server_file_search {
            get {
                return ResourceManager.GetString("server_file_search", resourceCulture);
            }
        }
    }
}
